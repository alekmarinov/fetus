png = assert(requires("libpng == 1.6.18"))
pixman = assert(requires("pixman == 0.32.8"))
freetype = assert(requires("freetype == 2.4.10"))
pkgconfig = assert(requires("pkg-config == 0.29"))
libXext = requires("libXext")

package = {
	name     = "cairo",
	version  = "1.14.2",
	source   = "$(repo.opensource)/cairo-1.14.2.tar.xz"
}

use "autotools"

function prepare()
	png:install()
	pixman:install()
	freetype:install()
	pkgconfig:install()
	if conf["host.system"] ~= "mingw" then
		libXext:install()
	end
	api.download()
	api.unarch()
end

function build()
	prepare()
	local confargs = {}
	if conf["host.system"] == "mingw" then
		table.insert(confargs, "--enable-xlib=no")
		table.insert(confargs, "--enable-xcb=no")
	end
	autotools.configure(unpack(confargs))
	autotools.make()
end

function isinstalled()
	local files = {
		h = "cairo/cairo.h",
		static = {"cairo"}
	}
	if conf["host.system"] == "mingw" then
		files.dynamic = {"libcairo-2", "libcairo-gobject-2"}
		table.insert(files.static, "cairo.dll")
	else
		files.dynamic = package.name
	end
	return api.isinstalled(files)
end

function install()
	if not isinstalled() then
		build()
		autotools.make("install")
		assert(isinstalled(), "something wrong after cairo install")
	end
end
