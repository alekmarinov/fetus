zlib = requires("zlib == 1.2.8")
ffi = requires("libffi == 3.2.1")
gettext = requires("gettext == 0.19.6")

package = {
	name     = "glib",
	version  = "2.46.0",
	source   = "$(repo.opensource)/glib-2.46.0.tar.xz"
}

use "autotools"

function prepare()
	zlib:install()
	ffi:install()
	gettext:install()
	api.download()
	api.unarch()
end

function build()
	prepare()

	-- patch removing python dependency
	api.gsubfile(api.makepath(path.src.dir, "gio/Makefile.in"), "SUBDIRS = gdbus%-2%.0/codegen", "SUBDIRS = ")

	-- removing tests as they depend on the removed gdbus-2.0/codegen above
	api.gsubfile(api.makepath(path.src.dir, "gio/Makefile.in"), " tests ", " ")

	local ffild = "-L"..path.install.lib
	if conf["host.arch"] == 32 then
		ffild = ffild.."32"
	end
	local confargs = {
		CFLAGS="-Wno-error=implicit-function-declaration",
		LIBFFI_CFLAGS="-I"..api.makepath(path.install.lib, ffi.package.name.."-"..ffi.package.version.string, "include"),
		LIBFFI_LIBS=ffild.." -lffi",
		["--with-libiconv"] = "gnu"
	}
	autotools.configure(confargs)

	if conf["build.system"] == "mingw" and conf["host.arch"] == 32 then
		autotools.make("WINDRES=windres --target=pe-i386")
	else
		autotools.make()
	end
end

function isinstalled()
	local files = {
		h = {"glib-2.0/glib.h", "glib-2.0/gobject/gobject.h", "glib-2.0/gio/gio.h"}
	}
	if conf["host.system"] == "mingw" then
		files.dynamic = {"libglib-2.0-0.dll", "libgio-2.0-0.dll", "libgmodule-2.0-0.dll", "libgobject-2.0-0.dll", "libgthread-2.0-0.dll"}
	end
	return api.isinstalled(files)
end

function install()
	if not isinstalled() then
		build()
		autotools.make("install")
		assert(isinstalled(), "something wrong after glib install")
	end
end
