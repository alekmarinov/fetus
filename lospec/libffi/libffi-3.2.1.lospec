package = {
	name     = "libffi",
	version  = "3.2.1",
	source   = "$(repo.opensource)/libffi-3.2.1.tar.gz"
}

use "autotools"

function prepare()
	api.download()
	api.unarch()
end

function build()
	prepare()
	autotools.configure()
	autotools.make()
end

function isinstalled()
	local libdir
	if api.isarch32(conf["target.arch"]) then
		if conf["target.system"] == "mingw" then
			libdir = api.makepath(path.install.dir, "lib32")
		else
			libdir = path.install.lib
		end
	else
		libdir = api.makepath(path.install.dir, "lib64")
	end
	local files = {
		h = api.makepath(path.install.lib, package.name.."-"..package.version.string, "include/ffi.h"),
		static = { api.makepath(libdir, "libffi.a") }
	}
	if conf["target.system"] == "mingw" then
		files.dynamic = "libffi-6.dll"
		table.insert(files.static, api.makepath(libdir, "libffi.dll.a"))
	else
		files.dynamic = "ffi"
	end
	return api.isinstalled(files)
end

function install()
	if not isinstalled() then
		build()
		autotools.make("install")
		assert(isinstalled(), "something wrong after libffi install")
	end
end
