package = {
	name     = "unzip",
	version  = "6.0",
	source   = "$(repo.opensource)/unzip60.tar.gz"
}

local function make(...)
	return assert(api.executein(path.src.dir, conf["build.make"], {
		PATH = path.install.bin..conf["build.pathsep"].."/bin"..conf["build.pathsep"].."/usr/bin"
	}, ...))
end

function prepare()
	api.download()
	api.unarch()
end

function build()
	prepare()
	local makeargs = {"-f", "unix/Makefile", "generic"}
	if api.isarch32(conf["host.arch"]) then
		table.insert(makeargs, "CC=gcc -m32")
	end
	make(unpack(makeargs))
end

function isinstalled()
	return api.isinstalled{
		exec = "unzip"
	}
end

function install()
	if not isinstalled() then
		if conf["build.system"] == "mingw" then
			log.e("unzip install is not supported under mingw")
		else
			build()
			make("-f", "unix/Makefile", "install", "prefix="..path.install.dir)
			assert(isinstalled(), "something wrong after "..package.name.." install")
		end
	end
end
