iconv = assert(requires("libiconv == 1.14"))

package = {
	name     = "gettext",
	version  = "0.19.6",
	source   = "$(repo.opensource)/gettext-0.19.6.tar.xz"
}

use "autotools"

function prepare()
	iconv:install()
	api.download()
	api.unarch()
end

function build()
	prepare()

	if conf["host.system"] == "mingw" then
		-- solves unresolved pthread functions
		autotools.configure{["--enable-threads"]="windows", LDFLAGS="-liconv", CFLAGS="-O2", CXXFLAGS="-O2"}

		if conf["host.arch"] == 32 then
			-- add windres option for 32-bit arch
			api.catfile(api.makepath(path.src.dir, "windows/windres-options"), "echo \"--target=pe-i386\"", "a")

			-- patch gettext-runtime/intl/Makefile to use windres --target=pe-i386 for 32 bit arch
			local mkfile = api.makepath(path.src.dir, "gettext-runtime/intl/Makefile")
			api.gsubfile(mkfile, "$%(RC%)", "$(RC) --target=pe-i386")

			-- patch gettext-tools/intl/Makefile to use windres --target=pe-i386 for 32 bit arch
			mkfile = api.makepath(path.src.dir, "gettext-tools/intl/Makefile")
			api.gsubfile(mkfile, "$%(RC%)", "$(RC) --target=pe-i386")
		end
	else
		autotools.configure{LT_SYS_LIBRARY_PATH = path.install.dir}
	end
	autotools.make()
end

function isinstalled()
	local files = {
		h = {"gettext-po.h"},
		static = {"gettextpo"}
	}
	if conf["host.system"] == "mingw" then
		table.insert(files.static, "gettextlib.dll")
		table.insert(files.static, "gettextpo.dll")
		table.insert(files.static, "gettextsrc.dll")
		files.dynamic = {"libgettextlib-"..table.concat(package.version, "-")..".dll", "libgettextsrc-"..table.concat(package.version, "-")..".dll", "libgettextpo-0.dll"}
	else
		files.dynamic = {"gettextlib-"..package.version.string, "gettextsrc-"..package.version.string, "gettextpo"}
	end
	return api.isinstalled(files)
end

function install()
	if not isinstalled() then
		build()
		autotools.install()
		assert(isinstalled(), "something wrong after gettext install")
	end
end
